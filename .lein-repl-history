(+ 1 2)
(str 1342)
(take 20(cycle ["foo" "bar"]))
(str "over " 9000 "!")
(- 2 3)
(- 2 (*6 3)
)
(- 2 (*6 3))
(- 2 (* 6 3))
+
(get 'clojure' 2)
(get "clojure" 2)
(hello who)
(fn [who] (str "hello, "  who "!"))
(fn [who])
(fn [who] (str "hello, "  who "!") "rohit")
((fn [who] (str "hello, "  who "!") "rohit"))
((fn [who] (str "hello, "  who "!") "rohit")
)
((fn [who] (str "hello, "  who "!")) "rohit")
((fn [who]
(str "hello, " who))
"rohit")
"abrakabadra".charAt(2);
(get "abb" 2)
"abb".charAt(2);
((fn [name] (str "hello , " name "!")) "rohit")
(def hello (fn [name] (str "hello", "who "!")))
(hello "rohit")
(def hello (fn [who] (str "Hello, " who "!")))
(hello "rohit")
(+ 1 2)
(+ 3 4)
(str 3 4)
(str 3 4) :"34"
exit
(-2 (75 * 45))
(-2 (* 75  45) )
(-2 (* 75  45))
(str 2 4)
(-2 (* 5 8))
(- 2 (* 78 35))
(-2 (* 75 45))
(-2 (* 75 35))
(-2  (* 75 35))
(-2 (* 75 45))
(- 2 (* 78 35))
(+ 4 (* 2 3))
(+ 2 3 4 5)
+
(get "clojure 2)
"
(get "clojure" 2)
(get "clojure" 4)
(get "abrakdabra" 0)
(fn [who] 
    (str "rohit" who))
(fn [who] (str "rohit" who))
(fn reddy)
(fn [who] (str "rohit" who) "rohit")
((fn [who] (str "rohit" who)) "rohit")
(fn [name] (str "welcome" name))
((fn [name] (str "welcome" name) "rohit")
)
((fn [name] (str "welcome") "rohit")
)
((fn [name] (str "welcome") "rohit"))
((fn [name] (str "welcome")) "rohit")
((fn [name] (str "welcome" name)) "rohit")
(def sayhello(fn [name] (str "hello " name)))
(sayhello "rohit")
(def hello [name]
(defn
  hello
    [name]
    (str "hello  " who))
(defn
  hello
  [name]
    (str "hello  " name))
(doc hello)
(doc +)
(user/clojuredocs min)
(use 'training-day)
(square 2)
(average 2 4)
(square 2)
(+ 2)
(doc square)
(doc +)
(doc /)
(/ 2(* 2 4))
(/ 2(+ 2 4))
(/ (+ 2 4) 2)
