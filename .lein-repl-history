+(1 2)
(+ 1 2)
(+ 1 2) ;=> 4
(+ 1 2) ;=> 3
(+ (* 2 3) 4)
(+ 3 4 5 6)
+
(get "Clojure" 2)
(get "Clojure" 3)
(get "Clojure" 1)
(get "Clojure" 0)
(get "Clojure" -12)
(get "Clojure" 6)
(fn [who] (str "Hello, " who "!"))
(fn [who] (str "Hello, " who "!") k)
(fn [who] (str "Hello, " who "!") "k")
((fn [who] (str "Hello, " who "!") "k"))
((fn [who] (str "Hello, " who "!")) "Jani")
(def hello (fn [who] (str "Hello, " who "!")))
(hello "u")
(def answer (fn (42)))
(def answer (fn [] (42)))
(answer)
((fn [] (str "42")))
(fn [] (str "42"))
((fn [x] (str "42" x)) x)
((fn [x] (str "42" x)) 5)
(fn [x] (str "42"))
((fn [x] (str "42")))
clear
((fn [x] (str "42")))
((fn [] (str "42")))
((fn (str "42")))
((fn [] (str "42")))
((fn [] (str 42)))
(def answer (str "42"))
(answer)
(def answer (fn (str "42")))
(def answer (fn (42)))
(def answer (fn (str 42)))
(def answer (fn [] (str "42")))
(answer)
(def answer (fn [] (42)))
(answer)
(def answer (fn (42)))
(def answer (fn [] ("42")))
(answer)
(def answer (fn [] (str 42)))
(answer)
(def answer (fn [] (println 42)))
(answer)
(def answer (fn [] (42)))
(answer)
(answer x)
(answer)
(def answer (fn [] (+ 42)))
(answer)
(def answer (fn (+ 42)))
(def answer (fn [] (+ 42)))
quit
exit
